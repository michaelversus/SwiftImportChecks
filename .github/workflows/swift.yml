# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: SwiftImportChecks Unit Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    - uses: SwiftyLab/setup-swift@latest
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test --enable-code-coverage
    - name: Install llvm-cov plugin
      run: brew install llvm
    - name: Generate coverage report
      run: |
      # Find the profdata file
      PROF_DATA=$(find .build -name "*.profdata" | head -n 1)
      echo "Found profdata at: $PROF_DATA"
    
      # Find the test executable
      TEST_BINARY=$(find .build/debug -name "swiftimportchecks*Tests" -type f -perm +111 | head -n 1)
      echo "Found test binary at: $TEST_BINARY"
    
      # Find the main executable
      MAIN_BINARY=$(find .build/debug -name "swiftimportchecks" -type f -perm +111 | head -n 1)
      echo "Found main binary at: $MAIN_BINARY"
    
      # Check if binaries were found
      if [ -z "$TEST_BINARY" ] && [ -z "$MAIN_BINARY" ]; then
        echo "Error: No executables found"
        find .build -type f -perm +111 | grep -v ".build/.*/" | sort
        exit 1
      fi
    
      # Generate coverage using the found binaries
      BINARIES=""
      [ -n "$TEST_BINARY" ] && BINARIES="$BINARIES $TEST_BINARY"
      [ -n "$MAIN_BINARY" ] && BINARIES="$BINARIES $MAIN_BINARY"
    
      xcrun llvm-cov export \
        -format="lcov" \
        -instr-profile="$PROF_DATA" \
        $BINARIES \
        --ignore-filename-regex=".build|Tests" > info.lcov
    
      echo "Coverage file size: $(wc -l info.lcov)"
      head -n 20 info.lcov
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: michaelversus/SwiftImportChecks
