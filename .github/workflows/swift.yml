# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: SwiftImportChecks Unit Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    - uses: SwiftyLab/setup-swift@latest
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test --enable-code-coverage YES
    - name: Install llvm-cov plugin
      run: brew install llvm
    - name: Generate coverage report
      run: |
        # Find coverage data
        PROF_DATA=$(find .build -name "*.profdata" | head -n 1)
        echo "Found profdata at: $PROF_DATA"
        
        # List all executables to debug
        echo "Available executables:"
        find .build -type f -perm +111 | sort
        
        # Try to find Swift package executables
        SWIFT_EXEC=$(find .build -name "swiftimportchecks*" -type f -perm +111 | head -n 1)
        
        if [ -n "$PROF_DATA" ] && [ -n "$SWIFT_EXEC" ]; then
          xcrun llvm-cov export -format="lcov" -instr-profile="$PROF_DATA" "$SWIFT_EXEC" > info.lcov
          echo "Generated coverage file size: $(wc -l info.lcov)"
        else
          # Alternative approach using all executables
          echo "Trying alternative approach..."
          EXEC_FILES=$(find .build -type f -perm +111 | grep -v "\.build/.*/")
          
          if [ -n "$EXEC_FILES" ]; then
            xcrun llvm-cov export -format="lcov" -instr-profile="$PROF_DATA" $EXEC_FILES > info.lcov
            echo "Generated coverage file size: $(wc -l info.lcov)"
          else
            echo "No suitable executables found for coverage generation"
            exit 1
          fi
        fi
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: michaelversus/SwiftImportChecks
